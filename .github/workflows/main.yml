name: Build and release
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-
      - run: npm ci
      - run: npm run lint
      - run: npm run test:ci
      - uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          check_name: "report"
          report_paths: "**/reports/junit.xml"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        if: success() && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        with:
          name: latest
          path: dist

  release:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
          registry-url: "https://npm.pkg.github.com"
      - uses: actions/download-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: latest
          path: dist
      - run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - run: npx release-it --ci --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
